name: Publish to NPM

on:
    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build library
              run: npm run build:ui

            - name: Build Storybook
              run: npm run build-storybook

    publish:
        needs: test
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  registry-url: "https://registry.npmjs.org"

            - name: Install dependencies
              run: npm ci

            - name: Build library
              run: npm run build:ui

            - name: Determine version and tag
              id: version
              run: |
                  if [[ $GITHUB_REF == refs/tags/v* ]]; then
                    # Tagged release - use the tag version
                    VERSION=${GITHUB_REF#refs/tags/v}
                    echo "version=$VERSION" >> $GITHUB_OUTPUT
                    echo "npm_tag=latest" >> $GITHUB_OUTPUT
                  else
                    # Main branch - create pre-release version
                    PACKAGE_VERSION=$(node -p "require('./packages/ui/package.json').version")
                    TIMESTAMP=$(date +%Y%m%d%H%M%S)
                    SHORT_SHA=${GITHUB_SHA:0:7}
                    VERSION="$PACKAGE_VERSION-dev.$TIMESTAMP.$SHORT_SHA"
                    echo "version=$VERSION" >> $GITHUB_OUTPUT
                    echo "npm_tag=dev" >> $GITHUB_OUTPUT
                  fi

            - name: Update package version
              working-directory: packages/ui
              run: npm version ${{ steps.version.outputs.version }} --no-git-tag-version

            - name: Publish to NPM
              working-directory: packages/ui
              run: npm publish --tag ${{ steps.version.outputs.npm_tag }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Create GitHub Release (for tagged versions)
              if: startsWith(github.ref, 'refs/tags/v')
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ github.ref }}
                  name: Release ${{ steps.version.outputs.version }}
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
